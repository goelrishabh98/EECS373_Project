#include "stepper.h"
#include "interface.h"
#include "xbee.h"

//Current Dimensions: 57, 85
//center: 42.5, 28.5
int main(){
	//uint8_t servoExtend[1] = "e";
	//uint8_t servoRetract[1] = "r";
	//MSS_UART_init(&g_mss_uart1, MSS_UART_57600_BAUD, MSS_UART_DATA_8_BITS | MSS_UART_NO_PARITY | MSS_UART_ONE_STOP_BIT);
	//MSS_UART_set_rx_handler( &g_mss_uart1, uart1_rx_handler, MSS_UART_FIFO_SINGLE_BYTE);
	stepper_config(SIXTEENTH, SIXTEENTH);
	interfaceConfig(57, 85);
	char character = '1';
	//Assumes that the marker is retracted and at the bottom left corner of a 3cm wide, 4cm high area that character is allowed to occupy
	if(character == '0') {
		//makeLine(2.0, -1);	//Start at bottom of 0
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(-1.0, -2.5);
		makeLine(0.0, -1.5);
		makeLine(1.0, -2.5);
		makeLine(1.0, 0.0);
		makeLine(1.0, 2.5);
		makeLine(0.0, 1.5);
		makeLine(-1.0, 1.5);
		makeLine(-1.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(3.0, 1.0);
	}
	else if(character == '1') {
		//makeLine(1.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(3.5, 0.0);
		//sendMessage(&servoRetract, 1, 0x373A);
		makeLine(-1.75, 0.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(0.0, -4.5);
		makeLine(-1.5, 1.5);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(3.75, 4.0);
	}
	else if(character == '2') {
		//makeLine(4.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(-3.0, 0.0);
		makeLine(0.0, -2.0);
		makeLine(3.0, 0.0);
		makeLine(0.0, -1.5);
		makeLine(-3.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(4.0, 4.5);
	}
	else if(character == '3') {
		//makeLine(1.0, -2.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(1.5, 1.0);
		makeLine(1.5, -1.0);
		makeLine(-1.5, -1.5);
		makeLine(1.5, -1.5);
		makeLine(-1.5, -1.0);
		makeLine(-1.5, 1.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(4.0, 5.0);
	}
	else if(character == '4') {
		//makeLine(3.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(0.0, -4.5);
		makeLine(-2.0, 2.0);
		makeLine(3.5, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(0.5, 4.5);
	}
	else if(character == '5') {
		//makeLine(1.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(3.0, 0.0);
		makeLine(0.0, -2.0);
		makeLine(-3.0, 0.0);
		makeLine(0.0, -1.5);
		makeLine(3.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(1.0, 4.5);
	}
	else if(character == '6') {
		//makeLine(1.0, -3.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(0.0, -2.0);
		makeLine(3.0, 0.0);
		makeLine(0.0, -2.0);
		makeLine(-3.0, 0.0);
		makeLine(0.0, -1.5);
		makeLine(3.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(1.0, 4.5);
	}
	else if(character == '7') {
		//makeLine(1.0, -5.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(3.0, 0.0);
		makeLine(-2.0, 4.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(1.0, 1.0);
	}
	else if(character == '8') {
		//makeLine(1.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(0.0, -5.0);
		makeLine(3.0, 0.0);
		makeLine(0.0, 5.0);
		makeLine(-3.0, 0.0);
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(0.0, -2.5);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(3.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(1.0, 3.5);
	}
	else if(character == '9') {
		//makeLine(1.0, -1.0);
		//sendMessage(&servoExtend, 1, 0x373A);
		makeLine(3.0, 0.0);
		makeLine(0.0, -5.0);
		makeLine(-3.0, 0.0);
		makeLine(0.0, 2.5);
		makeLine(3.0, 0.0);
		//Get ready for next character
		//sendMessage(&servoRetract, 1, 0x373A);
		//makeLine(1.0, 3.5);
	}

	/*
	makeLine(2.0, -0.7);
	sendMessage(servoExtend, 1, 0x373A);
	makeLine(0.0, -3.0);
	makeLine(-1.5, 1.5);
	makeLine(2.0, 0.0);
	//Get ready for next character
	sendMessage(servoRetract, 1, 0x373A);
	makeLine(0.5, 2.2);
	 */
	//makeLine(3, 0);
	//makeLine(0, -3);
	//makeLine(-3, 0);
	//makeLine(0, -3);
	//makeLine(3, 0);

	return 0;
}
